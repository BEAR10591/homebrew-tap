From 66b42aeed6a30ba28f32a0b828bda0ec6759c465 Mon Sep 17 00:00:00 2001
From: vroad <396351+vroad@users.noreply.github.com>
Date: Mon, 1 May 2023 13:07:46 +0900
Subject: [PATCH 1/2] options: add sd-lavc-o option

sd-lavc-o allows setting libavcodec options to subtitle decoders.
---
 DOCS/man/options.rst |  7 +++++++
 common/av_common.c   | 13 +++++++++++++
 common/av_common.h   |  1 +
 options/options.c    |  1 +
 options/options.h    |  1 +
 sub/lavc_conv.c      |  6 +++++-
 sub/sd.h             |  3 ++-
 sub/sd_ass.c         |  2 +-
 sub/sd_lavc.c        |  5 ++++-
 9 files changed, 35 insertions(+), 4 deletions(-)

diff --git a/DOCS/man/options.rst b/DOCS/man/options.rst
index df3674c8327..cf65afe1356 100644
--- a/DOCS/man/options.rst
+++ b/DOCS/man/options.rst
@@ -2913,6 +2913,13 @@ Subtitles
 
     If this option is not specified, ``~~/fonts`` will be used by default.
 
+``--sd-lavc-o=<key>=<value>[,<key>=<value>[,...]]``
+    Pass AVOptions to libavcodec decoder. Note, a patch to make the o=
+    unneeded and pass all unknown options through the AVOption system is
+    welcome. A full list of AVOptions can be found in the FFmpeg manual.
+
+    This is a key/value list option. See `List Options`_ for details.
+
 Window
 ------
 
diff --git a/common/av_common.c b/common/av_common.c
index 5d07349af08..afe7a6ff103 100644
--- a/common/av_common.c
+++ b/common/av_common.c
@@ -385,6 +385,19 @@ int mp_set_avopts_pos(struct mp_log *log, void *avobj, void *posargs, char **kv)
     return success;
 }
 
+// kv is in the format as by OPT_KEYVALUELIST(): kv[0]=key0, kv[1]=val0, ...
+// Find a value by key
+char *mp_get_avopts(char **kv, char *key)
+{
+    for (int n = 0; kv && kv[n * 2]; n++) {
+        char *k = kv[n * 2 + 0];
+        char *v = kv[n * 2 + 1];
+        if (strcmp(k, key) == 0)
+            return v;
+    }
+    return NULL;
+}
+
 /**
  * Must be used to free an AVPacket that was used with mp_set_av_packet().
  *
diff --git a/common/av_common.h b/common/av_common.h
index 1f05e14fab9..a6e425b8a51 100644
--- a/common/av_common.h
+++ b/common/av_common.h
@@ -49,6 +49,7 @@ void mp_set_avdict(struct AVDictionary **dict, char **kv);
 void mp_avdict_print_unset(struct mp_log *log, int msgl, struct AVDictionary *d);
 int mp_set_avopts(struct mp_log *log, void *avobj, char **kv);
 int mp_set_avopts_pos(struct mp_log *log, void *avobj, void *posargs, char **kv);
+char *mp_get_avopts(char **kv, char *key);
 void mp_free_av_packet(AVPacket **pkt);
 
 #endif
diff --git a/options/options.c b/options/options.c
index 5401ab126ba..7150829aa4d 100644
--- a/options/options.c
+++ b/options/options.c
@@ -293,6 +293,7 @@ const struct m_sub_options mp_subtitle_sub_opts = {
         {"sub-clear-on-seek", OPT_BOOL(sub_clear_on_seek)},
         {"teletext-page", OPT_INT(teletext_page), M_RANGE(1, 999)},
         {"sub-past-video-end", OPT_BOOL(sub_past_video_end)},
+        {"sd-lavc-o", OPT_KEYVALUELIST(sdopts)},
         {0}
     },
     .size = sizeof(OPT_BASE_STRUCT),
diff --git a/options/options.h b/options/options.h
index c3a5e727eef..20f3f446500 100644
--- a/options/options.h
+++ b/options/options.h
@@ -110,6 +110,7 @@ struct mp_subtitle_opts {
     bool sub_clear_on_seek;
     int teletext_page;
     bool sub_past_video_end;
+    char **sdopts;
 };
 
 struct mp_sub_filter_opts {
diff --git a/sub/lavc_conv.c b/sub/lavc_conv.c
index 532e91d5088..bcd51129e0b 100644
--- a/sub/lavc_conv.c
+++ b/sub/lavc_conv.c
@@ -67,7 +67,8 @@ static void disable_styles(bstr header)
 }
 
 struct lavc_conv *lavc_conv_create(struct mp_log *log,
-                                   const struct mp_codec_params *mp_codec)
+                                   const struct mp_codec_params *mp_codec,
+                                   char **sdopts)
 {
     struct lavc_conv *priv = talloc_zero(NULL, struct lavc_conv);
     priv->log = log;
@@ -96,6 +97,9 @@ struct lavc_conv *lavc_conv_create(struct mp_log *log,
     av_dict_set(&opts, "flags2", "+ass_ro_flush_noop", 0);
     if (strcmp(priv->codec, "eia_608") == 0)
         av_dict_set(&opts, "real_time", "1", 0);
+
+    mp_set_avopts(log, avctx, sdopts);
+
     if (avcodec_open2(avctx, codec, &opts) < 0)
         goto error;
     av_dict_free(&opts);
diff --git a/sub/sd.h b/sub/sd.h
index 87270c6c4f2..a0f49da7e7b 100644
--- a/sub/sd.h
+++ b/sub/sd.h
@@ -47,7 +47,8 @@ struct sd_functions {
 // lavc_conv.c
 struct lavc_conv;
 struct lavc_conv *lavc_conv_create(struct mp_log *log,
-                                   const struct mp_codec_params *mp_codec);
+                                   const struct mp_codec_params *mp_codec,
+                                   char **sdopts);
 char *lavc_conv_get_extradata(struct lavc_conv *priv);
 char **lavc_conv_decode(struct lavc_conv *priv, struct demux_packet *packet,
                         double *sub_pts, double *sub_duration);
diff --git a/sub/sd_ass.c b/sub/sd_ass.c
index bec989fee7f..f6f3d492336 100644
--- a/sub/sd_ass.c
+++ b/sub/sd_ass.c
@@ -261,7 +261,7 @@ static int init(struct sd *sd)
         strcmp(sd->codec->codec, "null") != 0)
     {
         ctx->is_converted = true;
-        ctx->converter = lavc_conv_create(sd->log, sd->codec);
+        ctx->converter = lavc_conv_create(sd->log, sd->codec, sd->opts->sdopts);
         if (!ctx->converter)
             return -1;
 
diff --git a/sub/sd_lavc.c b/sub/sd_lavc.c
index 1f7bf76fce3..55ce8d32e6f 100644
--- a/sub/sd_lavc.c
+++ b/sub/sd_lavc.c
@@ -103,7 +103,10 @@ static int init(struct sd *sd)
         goto error;
     priv->pkt_timebase = mp_get_codec_timebase(sd->codec);
     ctx->pkt_timebase = priv->pkt_timebase;
-    if (avcodec_open2(ctx, sub_codec, NULL) < 0)
+
+    mp_set_avopts(sd->log, ctx, sd->opts->sdopts);
+
+    if (avcodec_open2(ctx, sub_codec, &opts) < 0)
         goto error;
     priv->avctx = ctx;
     sd->priv = priv;

From 97880aa977b70cf028f6e16d7901db4b0f056758 Mon Sep 17 00:00:00 2001
From: vroad <396351+vroad@users.noreply.github.com>
Date: Mon, 1 May 2023 22:47:11 +0900
Subject: [PATCH 2/2] sd_lavc: support rendering bitmap subtitles with
 libaribcaption

mpv now correctly render subtitles with bitmap subtitles driver
when ARIB caption codec is in use and sd-lavc-o.sub_type is set
to bitmap. Previousonly only ASS subtitles driver was supported
for ARIB captions.
---
 sub/sd_lavc.c | 10 +++++++++-
 1 file changed, 9 insertions(+), 1 deletion(-)

diff --git a/sub/sd_lavc.c b/sub/sd_lavc.c
index 55ce8d32e6f..e0d82688fb1 100644
--- a/sub/sd_lavc.c
+++ b/sub/sd_lavc.c
@@ -75,6 +75,7 @@ struct sd_lavc_priv {
 static int init(struct sd *sd)
 {
     enum AVCodecID cid = mp_codec_to_av_codec_id(sd->codec->codec);
+    char *sub_type = NULL;
 
     // Supported codecs must be known to decode to paletted bitmaps
     switch (cid) {
@@ -84,6 +85,13 @@ static int init(struct sd *sd)
     case AV_CODEC_ID_XSUB:
     case AV_CODEC_ID_DVD_SUBTITLE:
         break;
+    case AV_CODEC_ID_ARIB_CAPTION:
+        // Use bitmap subtitles driver only when the sub_type option is set to 'bitmap'
+        sub_type = mp_get_avopts(sd->opts->sdopts, "sub_type");
+        if (sub_type != NULL && strcmp(sub_type, "bitmap") == 0)
+            break;
+
+        return -1; // If set to other values, try other drivers
     default:
         return -1;
     }
@@ -106,7 +114,7 @@ static int init(struct sd *sd)
 
     mp_set_avopts(sd->log, ctx, sd->opts->sdopts);
 
-    if (avcodec_open2(ctx, sub_codec, &opts) < 0)
+    if (avcodec_open2(ctx, sub_codec, NULL) < 0)
         goto error;
     priv->avctx = ctx;
     sd->priv = priv;
